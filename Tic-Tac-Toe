import itertools


def win(current_game):

    def all_same(l):
        if l.count(l[0]) == len(l) and l[0] != 0:
            return True
        else:
            return False

    #Horizontal
    for row in current_game:
        if all_same(row):
            print(f"Player {row[0]} is the Winner horizontally")
            return True

    #Diagonal
    diags = []
    for row, col in enumerate(range(len(game))):
        diags.append(game[row][col])

    if all_same(diags):
        print(f"Player {diags[0]} is the Winner diagonally(\\)")
        return True

    #Diagonal reversed
    diags = []
    for row, col in enumerate(reversed(range(len(game)))):
        diags.append(game[row][col])

    if all_same(diags):
        print(f"Player {diags[0]} is the Winner diagonally(/)")
        return True

    #Vertical
    for col in range(len(game)):
        check = []
        for row in game:
            check.append(row[col])

        if all_same(check):
            print(f"Player {check[0]} is the Winner vertically")
            return True
    return False


def game_board(game_map, player=0, row=0, col=0, just_display=False):
    try:
        if game_map[row][col] != 0:
            print("This position is already occupied. Choose another")
            return game_map, False

        header = "   " + "  ".join(str(x) for x in range(len(game_map)))
        print(header)
        if not just_display:
            game_map[row][col] = player
        for count, row in enumerate(game_map):
            print(count, row)
        return game_map, True

    except IndexError as e:
        print("Error: Make sure you enter row/column as 0, 1 or 2", e)
        return game_map, False
    except Exception as e:
        print("Error: Something went very wrong!!!")
        return game_map, False


#win(game)
play = True

while play:
    game = [[0, 0, 0],
            [0, 0, 0],
            [0, 0, 0]]
    game_won = False

    game, _ = game_board(game, just_display=True)
    player_choice = itertools.cycle([1, 2])
    while not game_won:
        current_player = next(player_choice)
        print(f"Current player: {current_player}")
        played = False

        while not played:
            column_input = int(input("What column do you want to play? (0, 1, 2): "))
            row_input = int(input("What row do you want to play? (0, 1, 2): "))
            game, played = game_board(game, current_player, row_input, column_input)

        if win(game):
            game_won = True
            again = input("The Game is over, Do you want to play again? (y/n) ")
            if again.lower() == 'y':
                print("Restarting")
            elif again.lower() == 'n':
                print("Bye Bye")
                play = False
            else:
                print("Not a valid answer, so See you later")
                play = False
